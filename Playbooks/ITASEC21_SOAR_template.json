{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
"parameters": {
        "PlaybookName": {
            "defaultValue": "ITASEC21_SOAR",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }
    },
    "variables": {
        "AzureADConnectionName": "[concat('azuread--1', parameters('PlaybookName'))]",
        "AzureSentinelConnectionName": "[concat('azuresentinel-2-', parameters('PlaybookName'))]",
		"ServiceNowConnectionName": "[concat('service-now-2-', parameters('PlaybookName'))]"
    },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azuread-1_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureloganalyticsdatacollector_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azuremonitorlogs_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azuresentinel-2_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365-1_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('service-now-2_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('teams-1_name'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Alert_-_Get_incident": {
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
              }
            },
            "Alert_Enrichment_from_GreyNoise": {
              "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
              "actions": {
                "Add_comment_to_incident_(V3)_3": {
                  "runAfter": {
                    "Parse_JSON_to_get_GreyNoise_response": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                      "message": "<p>GreyNoise report for @{items('Alert_Enrichment_from_GreyNoise')?['Address']}<br>\nClassification: @{body('Parse_JSON_to_get_GreyNoise_response')?['classification']}<br>\nName:@{body('Parse_JSON_to_get_GreyNoise_response')?['name']}<br>\nLink to GreiNoise:@{body('Parse_JSON_to_get_GreyNoise_response')?['link']}<br>\nLast Seen:@{body('Parse_JSON_to_get_GreyNoise_response')?['last_seen']}<br>\nNoise:@{body('Parse_JSON_to_get_GreyNoise_response')?['noise']}</p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "Alert_Encrichment_from_Greynoise": {
                  "runAfter": {},
                  "type": "Http",
                  "inputs": {
                    "method": "GET",
                    "uri": "[parameters('Alert_Encrichment_from_Greynoise-URI')]"
                  }
                },
                "Parse_JSON_to_get_GreyNoise_response": {
                  "runAfter": {
                    "Alert_Encrichment_from_Greynoise": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Alert_Encrichment_from_Greynoise')",
                    "schema": {
                      "properties": {
                        "classification": {
                          "type": "string"
                        },
                        "ip": {
                          "type": "string"
                        },
                        "last_seen": {
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "noise": {
                          "type": "boolean"
                        },
                        "riot": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_IPs": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Alert_Enrichment_from_VirusTotal": {
              "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
              "actions": {
                "Condition": {
                  "actions": {
                    "Add_comment_to_incident_(V3)": {
                      "runAfter": {
                        "Send_Data": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "message": "<p>VTIPReport found for @{items('Alert_Enrichment_from_VirusTotal')?['Address']} , Query: VTIPReport_CL | where asn_d == \"@{body('Parse_JSON')?['asn']}\" and country_s == \"@{body('Parse_JSON')?['country']}\"</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Send_Data": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@{body('HTTP')}",
                        "headers": {
                          "Log-Type": "VTIPReport",
                          "time-generated-field": "@{utcNow()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/api/logs"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Add_comment_to_incident_(V3)_2": {
                        "runAfter": {},
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "incidentArmId": "incident @{body('Alert_-_Get_incident')?['id']}",
                            "message": "<p>VTIPReport was not found for @{items('Alert_Enrichment_from_VirusTotal')?['Address']}</p>"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/Incidents/Comment"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@body('Parse_JSON')?['schema']?['properties']?['response_code']",
                          1
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "HTTP": {
                  "runAfter": {},
                  "type": "Http",
                  "inputs": {
                    "method": "GET",
                    "uri": "[parameters('HTTP-URI')]"
                  }
                },
                "Parse_JSON": {
                  "runAfter": {
                    "HTTP": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('HTTP')",
                    "schema": {
                      "properties": {
                        "content": {
                          "properties": {
                            "as_owner": {
                              "type": "string"
                            },
                            "asn": {
                              "type": "integer"
                            },
                            "country": {
                              "type": "string"
                            },
                            "detected_downloaded_samples": {
                              "type": "array"
                            },
                            "detected_urls": {
                              "items": {
                                "properties": {
                                  "positives": {
                                    "type": "integer"
                                  },
                                  "scan_date": {
                                    "type": "string"
                                  },
                                  "total": {
                                    "type": "integer"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "resolutions": {
                              "items": {
                                "properties": {
                                  "hostname": {
                                    "type": "string"
                                  },
                                  "last_resolved": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "response_code": {
                              "type": "integer"
                            },
                            "undetected_downloaded_samples": {
                              "type": "array"
                            },
                            "undetected_urls": {
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "verbose_msg": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "schema": {
                          "properties": {
                            "properties": {
                              "properties": {
                                "asn": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "country": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "response_code": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "verbose_msg": {
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_IPs": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Create_Record_-_Service_Now": {
              "runAfter": {
                "Alert_-_Get_incident": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "number": "@body('Alert_-_Get_incident')?['name']",
                  "severity": "@body('Alert_-_Get_incident')?['properties']?['severity']",
                  "short_description": "@body('Alert_-_Get_incident')?['properties']?['description']"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['service-now_1']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}",
                "queries": {
                  "sysparm_display_value": false,
                  "sysparm_exclude_reference_link": true
                }
              }
            },
            "Entities_-_Get_Accounts": {
              "runAfter": {
                "Alert_-_Get_incident": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/account"
              }
            },
            "Entities_-_Get_IPs": {
              "runAfter": {
                "Alert_-_Get_incident": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/ip"
              }
            },
            "For_each": {
              "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
              "actions": {
                "If_request_approved": {
                  "actions": {
                    "Update_user": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "accountEnabled": false
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuread']['connectionId']"
                          }
                        },
                        "method": "patch",
                        "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}"
                      }
                    }
                  },
                  "runAfter": {
                    "Send_approval_email": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@body('Send_approval_email')?['SelectedOption']",
                          "Approve"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Post_a_message_(V3)": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "body": {
                        "content": "<p><span style=\"font-size: 16px\"><strong>New Alert!</strong></span><br>\n<span style=\"color: rgb(251,160,38)\"><strong>Name</strong></span>: @{triggerBody()?['AlertDisplayName']}<br>\n<span style=\"color: rgb(235,107,86)\"><strong>Severity</strong></span>: @{body('Alert_-_Get_incident')?['properties']?['severity']}<br>\n<span style=\"color: rgb(85,57,130)\"><strong>User:</strong></span><span style=\"color: rgb(85,57,130)\"><strong>@{items('For_each')?['AadUserId']}</strong></span><br>\n<br>\n<span style=\"color: rgb(226,80,65)\"><strong>ENTITIES</strong></span>: @{triggerBody()?['Entities']}<br>\n<br>\n<span style=\"color: rgb(40,50,78)\"><strong>Incident URL</strong></span><span style=\"color: rgb(40,50,78)\">:</span>@{body('Alert_-_Get_incident')?['properties']?['incidentUrl']}<br>\n</p>",
                        "contentType": "html"
                      }
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['teams']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/v3/beta/teams/@{encodeURIComponent('8a056640-29c9-4586-bd5e-5d4589070146')}/channels/@{encodeURIComponent('19:6dd145fd15a54e5c924bffc84738c186@thread.tacv2')}/messages"
                  }
                },
                "Send_approval_email": {
                  "runAfter": {
                    "Post_a_message_(V3)": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnectionWebhook",
                  "inputs": {
                    "body": {
                      "Message": {
                        "HideHTMLMessage": false,
                        "Importance": "High",
                        "Options": "Approve, Reject",
                        "ShowHTMLConfirmationDialog": true,
                        "Subject": "Disable User: @{items('For_each')?['Name']}Approval Request",
                        "To": "antonio.formato@microsoft.com; "
                      },
                      "NotificationUrl": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "path": "/approvalmail/$subscriptions"
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_Accounts": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Initialize_variable": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "API Key",
                    "type": "string",
                    "value": "3d13bb4ca9e563603d915347e62124204b8145b36807905f644e2180e9ceea74"
                  }
                ]
              }
            },
            "Update_severity_if_VIP_user": {
              "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
              "actions": {
                "Condition_2": {
                  "actions": {
                    "Update_incident": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                          "severity": "High"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "/Incidents"
                      }
                    }
                  },
                  "runAfter": {
                    "Run_query_and_list_results": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@length(body('Run_query_and_list_results')?['value'])",
                            0
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "Get_user": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuread']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/v1.0/users/@{encodeURIComponent(items('Update_severity_if_VIP_user')?['AadUserId'])}"
                  }
                },
                "Run_query_and_list_results": {
                  "runAfter": {
                    "Get_user": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": "_GetWatchlist('vip_users')\n| where userPrincipalName == \"@{body('Get_user')?['userPrincipalName']}\"\n| where vipUser == \"True\"\n| project userPrincipalName ",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/queryData",
                    "queries": {
                      "resourcegroups": "cyberlabanformat",
                      "resourcename": "AzureSentinelDemo",
                      "resourcetype": "Log Analytics Workspace",
                      "subscriptions": "7cbf0976-6f14-4eb6-ba26-940c86f9da22",
                      "timerange": "1h"
                    }
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_Accounts": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuread": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuread')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuread-1_name'))]",
                "connectionName": "[parameters('azuread-1_name')]"
              },
              "azureloganalyticsdatacollector": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureloganalyticsdatacollector')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureloganalyticsdatacollector_name'))]",
                "connectionName": "[parameters('azureloganalyticsdatacollector_name')]"
              },
              "azuremonitorlogs": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuremonitorlogs')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuremonitorlogs_name'))]",
                "connectionName": "[parameters('azuremonitorlogs_name')]"
              },
              "azuresentinel": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuresentinel')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuresentinel-2_name'))]",
                "connectionName": "[parameters('azuresentinel-2_name')]"
              },
              "office365": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365-1_name'))]",
                "connectionName": "[parameters('office365-1_name')]"
              },
              "service-now_1": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/service-now')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('service-now-2_name'))]",
                "connectionName": "[parameters('service-now-2_name')]"
              },
              "teams": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/teams')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('teams-1_name'))]",
                "connectionName": "[parameters('teams-1_name')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('teams-1_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/teams')]"
        },
        "displayName": "[parameters('teams-1_displayName')]",
        "parameterValues": {
          "token:TenantId": "[parameters('teams-1_token:TenantId')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('service-now-2_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/service-now')]"
        },
        "displayName": "[parameters('service-now-2_displayName')]",
        "parameterValues": {
          "instance": "[parameters('service-now-2_instance')]",
          "username": "[parameters('service-now-2_username')]",
          "password": "[parameters('service-now-2_password')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('office365-1_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/office365')]"
        },
        "displayName": "[parameters('office365-1_displayName')]"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azuresentinel-2_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuresentinel')]"
        },
        "displayName": "[parameters('azuresentinel-2_displayName')]",
        "parameterValues": {
          "token:clientId": "[parameters('azuresentinel-2_token:clientId')]",
          "token:clientSecret": "[parameters('azuresentinel-2_token:clientSecret')]",
          "token:TenantId": "[parameters('azuresentinel-2_token:TenantId')]",
          "token:resourceUri": "[parameters('azuresentinel-2_token:resourceUri')]",
          "token:grantType": "[parameters('azuresentinel-2_token:grantType')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azuremonitorlogs_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuremonitorlogs')]"
        },
        "displayName": "[parameters('azuremonitorlogs_displayName')]",
        "parameterValues": {
          "token:clientId": "[parameters('azuremonitorlogs_token:clientId')]",
          "token:clientSecret": "[parameters('azuremonitorlogs_token:clientSecret')]",
          "token:TenantId": "[parameters('azuremonitorlogs_token:TenantId')]",
          "token:resourceUri": "[parameters('azuremonitorlogs_token:resourceUri')]",
          "token:grantType": "[parameters('azuremonitorlogs_token:grantType')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azureloganalyticsdatacollector_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureloganalyticsdatacollector')]"
        },
        "displayName": "[parameters('azureloganalyticsdatacollector_displayName')]",
        "parameterValues": {
          "username": "[parameters('azureloganalyticsdatacollector_username')]",
          "password": "[parameters('azureloganalyticsdatacollector_password')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azuread-1_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuread')]"
        },
        "displayName": "[parameters('azuread-1_displayName')]",
        "parameterValues": {
          "token:TenantId": "[parameters('azuread-1_token:TenantId')]"
        }
      }
    }
  ],
  "outputs": {}
}
