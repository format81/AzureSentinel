{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
	"metadata":{
        "comments": "This example playbook has been created to showcase IP enrichment through Playbook in Azure Sentinel",
        "author": "Antonio Formato @anformato"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "<PlaybookName>",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }
    },
    "variables": {
        "WorkflowConnectionName": "[concat('workflow-', parameters('PlaybookName'))]", 
        "SentinelConnectionName": "[concat('sentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('SentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('WorkflowConnectionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('SentinelConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Alert_-_Get_incident": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            }
                        },
                        "Alert_Enrichment_from_GreyNoise": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Add_comment_to_incident_(V3)_3": {
                                    "runAfter": {
                                        "Parse_JSON_to_get_GreyNoise_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                            "message": "<p>GreyNoise report for @{items('Alert_Enrichment_from_GreyNoise')?['Address']}<br>\nClassification: @{body('Parse_JSON_to_get_GreyNoise_response')?['classification']}<br>\nName:@{body('Parse_JSON_to_get_GreyNoise_response')?['name']}<br>\nLink to GreiNoise:@{body('Parse_JSON_to_get_GreyNoise_response')?['link']}<br>\nLast Seen:@{body('Parse_JSON_to_get_GreyNoise_response')?['last_seen']}<br>\nNoise:@{body('Parse_JSON_to_get_GreyNoise_response')?['noise']}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Alert_Encrichment_from_Greynoise": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "https://api.greynoise.io/v3/community/@{items('Alert_Enrichment_from_GreyNoise')?['Address']}"
                                    }
                                },
                                "Parse_JSON_to_get_GreyNoise_response": {
                                    "runAfter": {
                                        "Alert_Encrichment_from_Greynoise": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Alert_Encrichment_from_Greynoise')",
                                        "schema": {
                                            "properties": {
                                                "classification": {
                                                    "type": "string"
                                                },
                                                "ip": {
                                                    "type": "string"
                                                },
                                                "last_seen": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "noise": {
                                                    "type": "boolean"
                                                },
                                                "riot": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Alert_Enrichment_from_VirusTotal": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                            "runAfter": {
                                                "Send_Data": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                    "message": "<p>VirusTotal IP Report found for @{items('Alert_Enrichment_from_VirusTotal')?['Address']} , Query: VTIPReport_CL | where asn_d == \"@{body('Parse_JSON')?['asn']}\" and country_s == \"@{body('Parse_JSON')?['country']}\"</p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            }
                                        },
                                        "Send_Data": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@{body('HTTP')}",
                                                "headers": {
                                                    "Log-Type": "VTIPReport",
                                                    "time-generated-field": "@{utcNow()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/api/logs"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Add_comment_to_incident_(V3)_2": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "incident @{body('Alert_-_Get_incident')?['id']}",
                                                        "message": "<p>VirusTotal IP Report was not found for @{items('Alert_Enrichment_from_VirusTotal')?['Address']}</p>"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/Incidents/Comment"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Parse_JSON')?['schema']?['properties']?['response_code']",
                                                    1
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "https://www.virustotal.com/vtapi/v2/ip-address/report?apikey=@{variables('API Key')}&ip=@{items('Alert_Enrichment_from_VirusTotal')?['Address']}"
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP')",
                                        "schema": {
                                            "properties": {
                                                "content": {
                                                    "properties": {
                                                        "as_owner": {
                                                            "type": "string"
                                                        },
                                                        "asn": {
                                                            "type": "integer"
                                                        },
                                                        "country": {
                                                            "type": "string"
                                                        },
                                                        "detected_downloaded_samples": {
                                                            "type": "array"
                                                        },
                                                        "detected_urls": {
                                                            "items": {
                                                                "properties": {
                                                                    "positives": {
                                                                        "type": "integer"
                                                                    },
                                                                    "scan_date": {
                                                                        "type": "string"
                                                                    },
                                                                    "total": {
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "resolutions": {
                                                            "items": {
                                                                "properties": {
                                                                    "hostname": {
                                                                        "type": "string"
                                                                    },
                                                                    "last_resolved": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "response_code": {
                                                            "type": "integer"
                                                        },
                                                        "undetected_downloaded_samples": {
                                                            "type": "array"
                                                        },
                                                        "undetected_urls": {
                                                            "items": {
                                                                "type": "array"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "verbose_msg": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "schema": {
                                                    "properties": {
                                                        "properties": {
                                                            "properties": {
                                                                "asn": {
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "country": {
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "response_code": {
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "verbose_msg": {
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "API Key",
                                        "type": "string",
                                        "value": "please_use_your_Virus_Total_Key"
                                    }
                                ]
                            }
                        },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('SentinelConnectionName'))]",
                                "connectionName": "[variables('SentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                            }
                        }
                    }
                }
    ]
}
